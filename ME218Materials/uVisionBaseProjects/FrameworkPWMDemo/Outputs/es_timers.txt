; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\outputs\es_timers.o --asm_dir=.\Outputs\ --list_dir=.\Outputs\ --depend=.\outputs\es_timers.d --cpu=Cortex-M4.fp --apcs=interwork -IC:\ti\TivaWare_C_Series-2.1.0.12573 -I.\Headers -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.0.0\Device\Include\TM4C123 -DTM4C123GH6PM -Drvmdk -DPART_TM4C123GH6PM -DTARGET_IS_TM4C123_RB1 --omf_browse=.\outputs\es_timers.crf Source\ES_Timers.c]
                          THUMB

                          AREA ||i.ES_Timer_GetTime||, CODE, READONLY, ALIGN=1

                  ES_Timer_GetTime PROC
;;;259    ****************************************************************************/
;;;260    uint16_t ES_Timer_GetTime(void)
000000  f7ffbffe          B.W      _HW_GetTickCount
;;;261    {
;;;262       return (_HW_GetTickCount());
;;;263    }
;;;264    
                          ENDP


                          AREA ||i.ES_Timer_Init||, CODE, READONLY, ALIGN=1

                  ES_Timer_Init PROC
;;;129    ****************************************************************************/
;;;130    void ES_Timer_Init(TimerRate_t Rate)
000000  f7ffbffe          B.W      _HW_Timer_Init
;;;131    {
;;;132       // call the hardware init routine
;;;133       _HW_Timer_Init(Rate);
;;;134    }
;;;135    
                          ENDP


                          AREA ||i.ES_Timer_InitTimer||, CODE, READONLY, ALIGN=2

                  ES_Timer_InitTimer PROC
;;;228    ****************************************************************************/
;;;229    ES_TimerReturn_t ES_Timer_InitTimer(uint8_t Num, uint16_t NewTime)
000000  2810              CMP      r0,#0x10
;;;230    {
000002  d210              BCS      |L3.38|
;;;231       /* tried to set a timer that doesn't exist */
;;;232       if( (Num >= ARRAY_SIZE(TMR_TimerArray)) ||
;;;233       /* tried to set a timer without a service */
;;;234           (Timer2PostFunc[Num] == TIMER_UNUSED) ||
000004  4a09              LDR      r2,|L3.44|
000006  f8522020          LDR      r2,[r2,r0,LSL #2]
00000a  b162              CBZ      r2,|L3.38|
;;;235           /* tried to set a timer without putting any time on it */
;;;236           (NewTime == 0) )
00000c  b159              CBZ      r1,|L3.38|
;;;237          return ES_Timer_ERR;  
;;;238       TMR_TimerArray[Num] = NewTime;
00000e  4a08              LDR      r2,|L3.48|
000010  f8221010          STRH     r1,[r2,r0,LSL #1]
;;;239       TMR_ActiveFlags |= BitNum2SetMask[Num]; /* set timer as active */
000014  4907              LDR      r1,|L3.52|
000016  f8311010          LDRH     r1,[r1,r0,LSL #1]
00001a  4807              LDR      r0,|L3.56|
00001c  8882              LDRH     r2,[r0,#4]  ; TMR_ActiveFlags
00001e  4311              ORRS     r1,r1,r2
000020  8081              STRH     r1,[r0,#4]
;;;240       return ES_Timer_OK;
000022  2000              MOVS     r0,#0
;;;241    }
000024  4770              BX       lr
                  |L3.38|
000026  f04f30ff          MOV      r0,#0xffffffff        ;237
00002a  4770              BX       lr
;;;242    
                          ENDP

                  |L3.44|
                          DCD      ||.constdata||
                  |L3.48|
                          DCD      ||.bss||
                  |L3.52|
                          DCD      BitNum2SetMask
                  |L3.56|
                          DCD      ||.data||

                          AREA ||i.ES_Timer_SetTimer||, CODE, READONLY, ALIGN=2

                  ES_Timer_SetTimer PROC
;;;151    ****************************************************************************/
;;;152    ES_TimerReturn_t ES_Timer_SetTimer(uint8_t Num, uint16_t NewTime)
000000  2810              CMP      r0,#0x10
;;;153    {
000002  d209              BCS      |L4.24|
;;;154       /* tried to set a timer that doesn't exist */
;;;155       if( (Num >= ARRAY_SIZE(TMR_TimerArray)) ||
;;;156       /* tried to set a timer without a service */
;;;157           (Timer2PostFunc[Num] == TIMER_UNUSED) ||
000004  4a06              LDR      r2,|L4.32|
000006  f8522020          LDR      r2,[r2,r0,LSL #2]
00000a  b12a              CBZ      r2,|L4.24|
;;;158           (NewTime == 0) ) /* no time being set */
00000c  b121              CBZ      r1,|L4.24|
;;;159          return ES_Timer_ERR;  
;;;160       TMR_TimerArray[Num] = NewTime;
00000e  4a05              LDR      r2,|L4.36|
000010  f8221010          STRH     r1,[r2,r0,LSL #1]
;;;161       return ES_Timer_OK;
000014  2000              MOVS     r0,#0
;;;162    }
000016  4770              BX       lr
                  |L4.24|
000018  f04f30ff          MOV      r0,#0xffffffff        ;159
00001c  4770              BX       lr
;;;163    
                          ENDP

00001e  0000              DCW      0x0000
                  |L4.32|
                          DCD      ||.constdata||
                  |L4.36|
                          DCD      ||.bss||

                          AREA ||i.ES_Timer_StartTimer||, CODE, READONLY, ALIGN=2

                  ES_Timer_StartTimer PROC
;;;178    ****************************************************************************/
;;;179    ES_TimerReturn_t ES_Timer_StartTimer(uint8_t Num)
000000  2810              CMP      r0,#0x10
;;;180    {
000002  d20c              BCS      |L5.30|
;;;181       /* tried to set a timer that doesn't exist */
;;;182       if( (Num >= ARRAY_SIZE(TMR_TimerArray)) ||
;;;183           /* tried to set a timer with no time on it */
;;;184           (TMR_TimerArray[Num] == 0) )
000004  4907              LDR      r1,|L5.36|
000006  f8311010          LDRH     r1,[r1,r0,LSL #1]
00000a  b141              CBZ      r1,|L5.30|
;;;185          return ES_Timer_ERR;  
;;;186       TMR_ActiveFlags |= BitNum2SetMask[Num]; /* set timer as active */
00000c  4906              LDR      r1,|L5.40|
00000e  f8311010          LDRH     r1,[r1,r0,LSL #1]
000012  4806              LDR      r0,|L5.44|
000014  8882              LDRH     r2,[r0,#4]  ; TMR_ActiveFlags
000016  4311              ORRS     r1,r1,r2
000018  8081              STRH     r1,[r0,#4]
;;;187       return ES_Timer_OK;
00001a  2000              MOVS     r0,#0
;;;188    }
00001c  4770              BX       lr
                  |L5.30|
00001e  f04f30ff          MOV      r0,#0xffffffff        ;185
000022  4770              BX       lr
;;;189    
                          ENDP

                  |L5.36|
                          DCD      ||.bss||
                  |L5.40|
                          DCD      BitNum2SetMask
                  |L5.44|
                          DCD      ||.data||

                          AREA ||i.ES_Timer_StopTimer||, CODE, READONLY, ALIGN=2

                  ES_Timer_StopTimer PROC
;;;204    ****************************************************************************/
;;;205    ES_TimerReturn_t ES_Timer_StopTimer(uint8_t Num)
000000  2810              CMP      r0,#0x10
;;;206    {
000002  d302              BCC      |L6.10|
;;;207       if( Num >= ARRAY_SIZE(TMR_TimerArray) )
;;;208          return ES_Timer_ERR;  /* tried to set a timer that doesn't exist */
000004  f04f30ff          MOV      r0,#0xffffffff
;;;209       TMR_ActiveFlags &= BitNum2ClrMask[Num]; /* set timer as inactive */
;;;210       return ES_Timer_OK;
;;;211    }
000008  4770              BX       lr
                  |L6.10|
00000a  4904              LDR      r1,|L6.28|
00000c  f8312010          LDRH     r2,[r1,r0,LSL #1]     ;209
000010  4803              LDR      r0,|L6.32|
000012  8881              LDRH     r1,[r0,#4]            ;209  ; TMR_ActiveFlags
000014  4391              BICS     r1,r1,r2              ;209
000016  8081              STRH     r1,[r0,#4]            ;209
000018  2000              MOVS     r0,#0                 ;210
00001a  4770              BX       lr
;;;212    
                          ENDP

                  |L6.28|
                          DCD      BitNum2SetMask
                  |L6.32|
                          DCD      ||.data||

                          AREA ||i.ES_Timer_Tick_Resp||, CODE, READONLY, ALIGN=2

                  ES_Timer_Tick_Resp PROC
;;;283    ****************************************************************************/
;;;284    void ES_Timer_Tick_Resp(void)
000000  b570              PUSH     {r4-r6,lr}
;;;285    {
;;;286    	static Tflag_t NeedsProcessing;
;;;287    	static uint8_t NextTimer2Process;
;;;288    	static ES_Event NewEvent;
;;;289    
;;;290    	if (TMR_ActiveFlags != 0) /* if !=0 , then at least 1 timer is active */
000002  4c16              LDR      r4,|L7.92|
000004  88a0              LDRH     r0,[r4,#4]  ; TMR_ActiveFlags
000006  2800              CMP      r0,#0                 ;285
000008  d026              BEQ      |L7.88|
;;;291    	{
;;;292    		// start by getting a list of all the active timers
;;;293    		NeedsProcessing = TMR_ActiveFlags;
;;;294    		do{
;;;295    			// find the MSB that is set
;;;296    			NextTimer2Process = ES_GetMSBitSet(NeedsProcessing);
;;;297    			/* decrement that timer, check if timed out */
;;;298    			if(--TMR_TimerArray[NextTimer2Process] == 0)
00000a  4e15              LDR      r6,|L7.96|
;;;299    			{
;;;300    				NewEvent.EventType = ES_TIMEOUT;
;;;301    				NewEvent.EventParam = NextTimer2Process;
;;;302    				/* post the timeout event to the right Service */
;;;303    				Timer2PostFunc[NextTimer2Process](NewEvent);
;;;304    				/* and stop counting */
;;;305    				TMR_ActiveFlags &= BitNum2ClrMask[NextTimer2Process];
00000c  4d15              LDR      r5,|L7.100|
00000e  8060              STRH     r0,[r4,#2]            ;293
                  |L7.16|
000010  b280              UXTH     r0,r0                 ;296
000012  f7fffffe          BL       ES_GetMSBitSet
000016  7020              STRB     r0,[r4,#0]            ;296
000018  f8361010          LDRH     r1,[r6,r0,LSL #1]     ;298
00001c  1e49              SUBS     r1,r1,#1              ;298
00001e  0409              LSLS     r1,r1,#16             ;298
000020  0c09              LSRS     r1,r1,#16             ;298
000022  f8261010          STRH     r1,[r6,r0,LSL #1]     ;298
000026  d110              BNE      |L7.74|
000028  490c              LDR      r1,|L7.92|
00002a  2203              MOVS     r2,#3                 ;300
00002c  1d89              ADDS     r1,r1,#6              ;300
00002e  700a              STRB     r2,[r1,#0]            ;300
000030  8048              STRH     r0,[r1,#2]            ;301
000032  490d              LDR      r1,|L7.104|
000034  f8511020          LDR      r1,[r1,r0,LSL #2]     ;303
000038  f8d40006          LDR      r0,[r4,#6]            ;303  ; NewEvent
00003c  4788              BLX      r1                    ;303
00003e  7820              LDRB     r0,[r4,#0]  ; NextTimer2Process
000040  f8351010          LDRH     r1,[r5,r0,LSL #1]
000044  88a0              LDRH     r0,[r4,#4]  ; TMR_ActiveFlags
000046  4388              BICS     r0,r0,r1
000048  80a0              STRH     r0,[r4,#4]
                  |L7.74|
;;;306    			}
;;;307    			// mark off the active timer that we just processed
;;;308    			NeedsProcessing &= BitNum2ClrMask[NextTimer2Process];
00004a  7820              LDRB     r0,[r4,#0]  ; NextTimer2Process
00004c  f8351010          LDRH     r1,[r5,r0,LSL #1]
000050  8860              LDRH     r0,[r4,#2]  ; NeedsProcessing
000052  4388              BICS     r0,r0,r1
000054  8060              STRH     r0,[r4,#2]
;;;309    		}while(NeedsProcessing != 0);
000056  d1db              BNE      |L7.16|
                  |L7.88|
;;;310          
;;;311    	}
;;;312    }
000058  bd70              POP      {r4-r6,pc}
;;;313    /*------------------------------- Footnotes -------------------------------*/
                          ENDP

00005a  0000              DCW      0x0000
                  |L7.92|
                          DCD      ||.data||
                  |L7.96|
                          DCD      ||.bss||
                  |L7.100|
                          DCD      BitNum2SetMask
                  |L7.104|
                          DCD      ||.constdata||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  TMR_TimerArray
                          %        32

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  Timer2PostFunc
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      PostTestHarnessService0

                          AREA ||.data||, DATA, ALIGN=1

                  NextTimer2Process
000000  0000              DCB      0x00,0x00
                  NeedsProcessing
000002  0000              DCB      0x00,0x00
                  TMR_ActiveFlags
000004  0000              DCB      0x00,0x00
                  NewEvent
000006  0000              DCB      0x00,0x00
000008  0000              DCB      0x00,0x00
