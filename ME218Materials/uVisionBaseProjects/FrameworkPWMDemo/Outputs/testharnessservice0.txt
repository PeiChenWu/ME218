; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\outputs\testharnessservice0.o --asm_dir=.\Outputs\ --list_dir=.\Outputs\ --depend=.\outputs\testharnessservice0.d --cpu=Cortex-M4.fp --apcs=interwork -IC:\ti\TivaWare_C_Series-2.1.0.12573 -I.\Headers -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.0.0\Device\Include\TM4C123 -DTM4C123GH6PM -Drvmdk -DPART_TM4C123GH6PM -DTARGET_IS_TM4C123_RB1 --omf_browse=.\outputs\testharnessservice0.crf Source\TestHarnessService0.c]
                          THUMB

                          AREA ||i.InitTestHarnessService0||, CODE, READONLY, ALIGN=2

                  InitTestHarnessService0 PROC
;;;77     ****************************************************************************/
;;;78     bool InitTestHarnessService0 ( uint8_t Priority )
000000  b558              PUSH     {r3,r4,r6,lr}
;;;79     {
;;;80       ES_Event ThisEvent;
;;;81       uint16_t StopTime;
;;;82       
;;;83       MyPriority = Priority;
000002  4e17              LDR      r6,|L1.96|
;;;84       /********************************************
;;;85        in here you write your initialization code
;;;86        *******************************************/
;;;87     	// initialize deferral queue for testing Deferal function
;;;88       ES_InitDeferralQueueWith( DeferralQueue, ARRAY_SIZE(DeferralQueue) );
000004  2104              MOVS     r1,#4
000006  70b0              STRB     r0,[r6,#2]            ;83
000008  4816              LDR      r0,|L1.100|
00000a  f7fffffe          BL       ES_InitQueue
00000e  4816              LDR      r0,|L1.104|
000010  6801              LDR      r1,[r0,#0]
000012  f0410120          ORR      r1,r1,#0x20
000016  6001              STR      r1,[r0,#0]
000018  6800              LDR      r0,[r0,#0]
00001a  9000              STR      r0,[sp,#0]
00001c  4813              LDR      r0,|L1.108|
00001e  6801              LDR      r1,[r0,#0]
000020  f041010e          ORR      r1,r1,#0xe
000024  6001              STR      r1,[r0,#0]
000026  4812              LDR      r0,|L1.112|
000028  6801              LDR      r1,[r0,#0]
00002a  f041010e          ORR      r1,r1,#0xe
00002e  6001              STR      r1,[r0,#0]
;;;89     	// initialize LED drive for testing/debug output
;;;90     	InitLED();
;;;91     
;;;92       // block a little bit to test if ES_GetTime() is ticking here
;;;93       StopTime = ES_Timer_GetTime() + 3;
000030  f7fffffe          BL       ES_Timer_GetTime
000034  1cc0              ADDS     r0,r0,#3
000036  b284              UXTH     r4,r0
;;;94       while( ES_Timer_GetTime() != StopTime )
000038  e003              B        |L1.66|
                  |L1.58|
;;;95         putchar('.');
00003a  490e              LDR      r1,|L1.116|
00003c  202e              MOVS     r0,#0x2e
00003e  f7fffffe          BL       putc
                  |L1.66|
000042  f7fffffe          BL       ES_Timer_GetTime
000046  42a0              CMP      r0,r4                 ;94
000048  d1f7              BNE      |L1.58|
;;;96       // post the initial transition event
;;;97       ThisEvent.EventType = ES_INIT;
00004a  2002              MOVS     r0,#2
00004c  4629              MOV      r1,r5
00004e  f3600107          BFI      r1,r0,#0,#8
;;;98       if (ES_PostToService( MyPriority, ThisEvent) == true)
000052  78b0              LDRB     r0,[r6,#2]  ; MyPriority
000054  f7fffffe          BL       ES_PostToService
000058  2800              CMP      r0,#0
00005a  d000              BEQ      |L1.94|
;;;99       {
;;;100          return true;
00005c  2001              MOVS     r0,#1
                  |L1.94|
;;;101      }else
;;;102      {
;;;103          return false;
;;;104      }
;;;105    }
00005e  bd58              POP      {r3,r4,r6,pc}
;;;106    
                          ENDP

                  |L1.96|
                          DCD      ||.data||
                  |L1.100|
                          DCD      ||.bss||
                  |L1.104|
                          DCD      0x400fe608
                  |L1.108|
                          DCD      0x4002551c
                  |L1.112|
                          DCD      0x40025400
                  |L1.116|
                          DCD      __stdout

                          AREA ||i.PostTestHarnessService0||, CODE, READONLY, ALIGN=2

                  PostTestHarnessService0 PROC
;;;123    ****************************************************************************/
;;;124    bool PostTestHarnessService0( ES_Event ThisEvent )
000000  4601              MOV      r1,r0
;;;125    {
;;;126      return ES_PostToService( MyPriority, ThisEvent);
000002  4802              LDR      r0,|L2.12|
000004  7880              LDRB     r0,[r0,#2]  ; MyPriority
000006  f7ffbffe          B.W      ES_PostToService
;;;127    }
;;;128    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      ||.data||

                          AREA ||i.RunTestHarnessService0||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                  RunTestHarnessService0 PROC
;;;145    ****************************************************************************/
;;;146    ES_Event RunTestHarnessService0( ES_Event ThisEvent )
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;147    {
000004  4604              MOV      r4,r0
;;;148      ES_Event ReturnEvent;
;;;149      ReturnEvent.EventType = ES_NO_EVENT; // assume no errors
000006  2000              MOVS     r0,#0
000008  f3600707          BFI      r7,r0,#0,#8
00000c  b2e0              UXTB     r0,r4
;;;150    	static char DeferredChar = '1';
;;;151      
;;;152      switch (ThisEvent.EventType){
;;;153        case ES_INIT :
;;;154          ES_Timer_InitTimer(SERVICE0_TIMER, HALF_SEC);
;;;155          InitPWMDemo();
;;;156          puts("Service 00:");
;;;157          printf("\rES_INIT received in Service %d\r\n", MyPriority);
00000e  4e34              LDR      r6,|L3.224|
000010  2802              CMP      r0,#2                 ;152
000012  d005              BEQ      |L3.32|
000014  0c25              LSRS     r5,r4,#16             ;147
000016  2803              CMP      r0,#3                 ;152
000018  d011              BEQ      |L3.62|
00001a  2804              CMP      r0,#4                 ;152
00001c  d15d              BNE      |L3.218|
00001e  e02c              B        |L3.122|
                  |L3.32|
000020  f44f71fa          MOV      r1,#0x1f4             ;154
000024  200f              MOVS     r0,#0xf               ;154
000026  f7fffffe          BL       ES_Timer_InitTimer
00002a  f7fffffe          BL       InitPWMDemo
00002e  a02d              ADR      r0,|L3.228|
000030  f7fffffe          BL       puts
000034  78b1              LDRB     r1,[r6,#2]  ; MyPriority
000036  a02e              ADR      r0,|L3.240|
000038  f7fffffe          BL       __2printf
;;;158        
;;;159          break;
00003c  e04d              B        |L3.218|
                  |L3.62|
;;;160        case ES_TIMEOUT :  // re-start timer & announce
;;;161          ES_Timer_InitTimer(SERVICE0_TIMER, FIVE_SEC);
00003e  f2413188          MOV      r1,#0x1388
000042  200f              MOVS     r0,#0xf
000044  f7fffffe          BL       ES_Timer_InitTimer
;;;162          printf("ES_TIMEOUT received from Timer %d in Service %d\r\n", 
000048  78b2              LDRB     r2,[r6,#2]  ; MyPriority
00004a  4629              MOV      r1,r5
00004c  a031              ADR      r0,|L3.276|
00004e  f7fffffe          BL       __2printf
000052  493d              LDR      r1,|L3.328|
000054  f8d103fc          LDR      r0,[r1,#0x3fc]
000058  f020000e          BIC      r0,r0,#0xe
00005c  f8c103fc          STR      r0,[r1,#0x3fc]
000060  f8d123fc          LDR      r2,[r1,#0x3fc]
000064  7870              LDRB     r0,[r6,#1]  ; LEDvalue
000066  4302              ORRS     r2,r2,r0
000068  f8c123fc          STR      r2,[r1,#0x3fc]
00006c  2808              CMP      r0,#8
00006e  d002              BEQ      |L3.118|
000070  0040              LSLS     r0,r0,#1
                  |L3.114|
000072  7070              STRB     r0,[r6,#1]
000074  e031              B        |L3.218|
                  |L3.118|
000076  2002              MOVS     r0,#2
000078  e7fb              B        |L3.114|
                  |L3.122|
;;;163                  ThisEvent.EventParam, MyPriority);
;;;164          BlinkLED();
;;;165          break;
;;;166        case ES_NEW_KEY :  // announce
;;;167          printf("ES_NEW_KEY received with -> %c <- in Service 0\r\n", 
00007a  b2e9              UXTB     r1,r5
00007c  a033              ADR      r0,|L3.332|
00007e  f7fffffe          BL       __2printf
;;;168                  (char)ThisEvent.EventParam);
;;;169          if( 'd' == ThisEvent.EventParam ){
000082  2d64              CMP      r5,#0x64
000084  d10c              BNE      |L3.160|
;;;170              ThisEvent.EventParam = DeferredChar++; //
000086  7830              LDRB     r0,[r6,#0]  ; DeferredChar
000088  f360441f          BFI      r4,r0,#16,#16
00008c  1c40              ADDS     r0,r0,#1
00008e  7030              STRB     r0,[r6,#0]
;;;171              if (ES_DeferEvent( DeferralQueue, ThisEvent )){
000090  4621              MOV      r1,r4
000092  483b              LDR      r0,|L3.384|
000094  f7fffffe          BL       ES_EnQueueLIFO
000098  b110              CBZ      r0,|L3.160|
;;;172                puts("ES_NEW_KEY deferred in Service 0\r");
00009a  a03a              ADR      r0,|L3.388|
00009c  f7fffffe          BL       puts
                  |L3.160|
0000a0  0c20              LSRS     r0,r4,#16
;;;173              }
;;;174          }
;;;175          if( 'r' == ThisEvent.EventParam ){
0000a2  2872              CMP      r0,#0x72
0000a4  d002              BEQ      |L3.172|
;;;176              ThisEvent.EventParam = 'Q'; // This one gets posted normally
;;;177              ES_PostToService( MyPriority, ThisEvent);
;;;178              // but we slide the deferred events under it so it(they) should come out first
;;;179              if ( true == ES_RecallEvents( MyPriority, DeferralQueue )){
;;;180                puts("ES_NEW_KEY(s) recalled in Service 0\r");
;;;181    					DeferredChar = '1';
;;;182              }
;;;183          }
;;;184          if( '1' == ThisEvent.EventParam ){
0000a6  2831              CMP      r0,#0x31
0000a8  d012              BEQ      |L3.208|
0000aa  e016              B        |L3.218|
                  |L3.172|
0000ac  2051              MOVS     r0,#0x51              ;176
0000ae  4621              MOV      r1,r4                 ;176
0000b0  f360411f          BFI      r1,r0,#16,#16         ;176
0000b4  78b0              LDRB     r0,[r6,#2]            ;177  ; MyPriority
0000b6  f7fffffe          BL       ES_PostToService
0000ba  4931              LDR      r1,|L3.384|
0000bc  78b0              LDRB     r0,[r6,#2]            ;179  ; MyPriority
0000be  f7fffffe          BL       ES_RecallEvents
0000c2  b150              CBZ      r0,|L3.218|
0000c4  a038              ADR      r0,|L3.424|
0000c6  f7fffffe          BL       puts
0000ca  2031              MOVS     r0,#0x31              ;181
0000cc  7030              STRB     r0,[r6,#0]            ;181
0000ce  e004              B        |L3.218|
                  |L3.208|
;;;185              Set100_0DC();
0000d0  f7fffffe          BL       Set100_0DC
;;;186              puts("Set Duty Cycles to 0 & 100%\r\n");
0000d4  a03e              ADR      r0,|L3.464|
0000d6  f7fffffe          BL       puts
                  |L3.218|
;;;187          }
;;;188          break;
;;;189        default :
;;;190          break;
;;;191      }
;;;192      return ReturnEvent;
0000da  4638              MOV      r0,r7
;;;193    }
0000dc  e8bd81f0          POP      {r4-r8,pc}
;;;194    
                          ENDP

                  |L3.224|
                          DCD      ||.data||
                  |L3.228|
0000e4  53657276          DCB      "Service 00:",0
0000e8  69636520
0000ec  30303a00
                  |L3.240|
0000f0  0d45535f          DCB      "\rES_INIT received in Service %d\r\n",0
0000f4  494e4954
0000f8  20726563
0000fc  65697665
000100  6420696e
000104  20536572
000108  76696365
00010c  2025640d
000110  0a00    
000112  00                DCB      0
000113  00                DCB      0
                  |L3.276|
000114  45535f54          DCB      "ES_TIMEOUT received from Timer %d in Service %d\r\n",0
000118  494d454f
00011c  55542072
000120  65636569
000124  76656420
000128  66726f6d
00012c  2054696d
000130  65722025
000134  6420696e
000138  20536572
00013c  76696365
000140  2025640d
000144  0a00    
000146  00                DCB      0
000147  00                DCB      0
                  |L3.328|
                          DCD      0x40025000
                  |L3.332|
00014c  45535f4e          DCB      "ES_NEW_KEY received with -> %c <- in Service 0\r\n",0
000150  45575f4b
000154  45592072
000158  65636569
00015c  76656420
000160  77697468
000164  202d3e20
000168  2563203c
00016c  2d20696e
000170  20536572
000174  76696365
000178  20300d0a
00017c  00      
00017d  00                DCB      0
00017e  00                DCB      0
00017f  00                DCB      0
                  |L3.384|
                          DCD      ||.bss||
                  |L3.388|
000184  45535f4e          DCB      "ES_NEW_KEY deferred in Service 0\r",0
000188  45575f4b
00018c  45592064
000190  65666572
000194  72656420
000198  696e2053
00019c  65727669
0001a0  63652030
0001a4  0d00    
0001a6  00                DCB      0
0001a7  00                DCB      0
                  |L3.424|
0001a8  45535f4e          DCB      "ES_NEW_KEY(s) recalled in Service 0\r",0
0001ac  45575f4b
0001b0  45592873
0001b4  29207265
0001b8  63616c6c
0001bc  65642069
0001c0  6e205365
0001c4  72766963
0001c8  6520300d
0001cc  00      
0001cd  00                DCB      0
0001ce  00                DCB      0
0001cf  00                DCB      0
                  |L3.464|
0001d0  53657420          DCB      "Set Duty Cycles to 0 & 100%\r\n",0
0001d4  44757479
0001d8  20437963
0001dc  6c657320
0001e0  746f2030
0001e4  20262031
0001e8  3030250d
0001ec  0a00    
0001ee  00                DCB      0
0001ef  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  DeferralQueue
                          %        16

                          AREA ||.data||, DATA, ALIGN=0

                  DeferredChar
000000  31                DCB      0x31
                  LEDvalue
000001  02                DCB      0x02
                  MyPriority
000002  00                DCB      0x00
