; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\outputs\es_lookuptables.o --asm_dir=.\Outputs\ --list_dir=.\Outputs\ --depend=.\outputs\es_lookuptables.d --cpu=Cortex-M4.fp --apcs=interwork -IC:\ti\TivaWare_C_Series-2.1.0.12573 -I.\Headers -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.0.0\Device\Include\TM4C123 -DTM4C123GH6PM -Drvmdk -DPART_TM4C123GH6PM -DTARGET_IS_TM4C123_RB1 --omf_browse=.\outputs\es_lookuptables.crf Source\ES_LookupTables.c]
                          THUMB

                          AREA ||i.ES_GetMSBitSet||, CODE, READONLY, ALIGN=2

                  ES_GetMSBitSet PROC
;;;78     /*------------------------------ Module Code ------------------------------*/
;;;79     uint8_t ES_GetMSBitSet( uint16_t Val2Check) {
000000  b510              PUSH     {r4,lr}
;;;80     
;;;81       int8_t LoopCntr;
;;;82       uint8_t Nybble2Test; 
;;;83       uint8_t ReturnVal = 128; // this is the error return value
000002  2280              MOVS     r2,#0x80
000004  4603              MOV      r3,r0                 ;79
;;;84     
;;;85       // loop through the parameter, nybble by nybble
;;;86       for( LoopCntr = sizeof(Val2Check) * (BITS_PER_BYTE/BITS_PER_NYBBLE)-1;
000006  2103              MOVS     r1,#3
                  |L1.8|
;;;87            LoopCntr >= 0; LoopCntr--) {
;;;88         // move a nybble into the 4 LSB positions for lookup
;;;89         Nybble2Test = (uint8_t)
000008  008c              LSLS     r4,r1,#2
00000a  fa23f004          LSR      r0,r3,r4
00000e  f010000f          ANDS     r0,r0,#0xf
;;;90                       ((Val2Check >> (uint8_t)(LoopCntr * BITS_PER_NYBBLE)) & 
;;;91                               ISOLATE_LS_NYBBLE);
;;;92         if ( Nybble2Test != 0){
000012  d007              BEQ      |L1.36|
;;;93           // lookup the bit num & adjust for the number of shifts to get there
;;;94           ReturnVal = Nybble2MSBitNum[Nybble2Test-1] + 
000014  4a06              LDR      r2,|L1.48|
000016  4410              ADD      r0,r0,r2
000018  f8100c01          LDRB     r0,[r0,#-1]
00001c  eb000081          ADD      r0,r0,r1,LSL #2
000020  b2c2              UXTB     r2,r0
;;;95                       (LoopCntr * BITS_PER_NYBBLE);
;;;96           break;     
000022  e003              B        |L1.44|
                  |L1.36|
000024  1e49              SUBS     r1,r1,#1
000026  b249              SXTB     r1,r1                 ;87
000028  2900              CMP      r1,#0                 ;87
00002a  daed              BGE      |L1.8|
                  |L1.44|
;;;97         }
;;;98       }
;;;99       return ReturnVal;  
00002c  4610              MOV      r0,r2
;;;100    }
00002e  bd10              POP      {r4,pc}
;;;101    
                          ENDP

                  |L1.48|
                          DCD      ||area_number.5||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  BitNum2SetMask
000000  00010002          DCW      0x0001,0x0002
000004  00040008          DCW      0x0004,0x0008
000008  00100020          DCW      0x0010,0x0020
00000c  00400080          DCW      0x0040,0x0080
000010  01000200          DCW      0x0100,0x0200
000014  04000800          DCW      0x0400,0x0800
000018  10002000          DCW      0x1000,0x2000
00001c  40008000          DCW      0x4000,0x8000

                          AREA ||area_number.5||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.5||, ||.constdata||
                  Nybble2MSBitNum
000000  00010102          DCB      0x00,0x01,0x01,0x02
000004  02020203          DCB      0x02,0x02,0x02,0x03
000008  03030303          DCB      0x03,0x03,0x03,0x03
00000c  030303            DCB      0x03,0x03,0x03
