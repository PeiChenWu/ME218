{\rtf1\ansi\uc0 \deff1{\fonttbl{\f1\fmodern\fprq1\fcharset0 Times New Roman;}}{\colortbl;\red255\green255\blue255;\red00\green00\blue00;\red255\green00\blue00;\red255\green00\blue00;\red00\green00\blue255;\red00\green00\blue255;\red255\green34\blue255;\red255\green34\blue255;\red255\green00\blue00;\red00\green00\blue255;\red00\green00\blue00;\red255\green34\blue255;\red178\green104\blue24;\red00\green255\blue00;\red178\green104\blue24;\red00\green00\blue00;}
\paperw11905\paperh16837\margl1134\margr1134\margt1134\margb1134\sectd\plain\f1\fs20
\pard \cbpat1{{\cf2{}}{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Module}}}\par\pard
\cbpat1{{\cf6{   EventCheckers.c}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Revision}}}\par\pard
\cbpat1{{\cf6{   {1}.{0}.{1} }}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{   This is the sample for writing event checkers along with the event }}}\par\pard
\cbpat1{{\cf6{   checkers used in the basic framework test harness.}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{   Note the use of static variables in sample event checker to detect}}}\par\pard
\cbpat1{{\cf6{   ONLY transitions.}}}\par\pard
\cbpat1{{\cf6{   }}}\par\pard
\cbpat1{{\cf6{ History}}}\par\pard
\cbpat1{{\cf6{ When           Who     What/Why}}}\par\pard
\cbpat1{{\cf6{ -------------- ---     --------}}}\par\pard
\cbpat1{{\cf6{ {0}{8}/{0}{6}/{1}{3} {1}{3}:{3}{6} jec     initial version}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf5{// this will pull in the symbolic definitions for events, which we will want}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// to post in response to detecting events}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_Configure.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// this will get us the structure definition for events, which we will need}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// in order to post events in response to detecting events}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_Events.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// if you want to use distribution lists then you need those function }}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// definitions too.}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_PostList.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// This include will pull in all of the headers from the service modules}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// providing the prototypes for all of the post functions}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_ServiceHeaders.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// this test harness for the framework references the serial routines that}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// are defined in ES_Port.c}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_Port.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// include our own prototypes to insure consistency between header & }}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// actual functionsdefinition}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"EventCheckers.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf8{#include}} {\cf9{"inc/hw_memmap.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"inc/hw_types.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"inc/hw_gpio.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"inc/hw_sysctl.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"driverlib/sysctl.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"driverlib/pin_map.h"}}{\cf8{}}	{\cf5{// Define PART_TM{4}C{1}{2}{3}GH{6}PM in project}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#include}} {\cf9{"driverlib/gpio.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf8{#include}} {\cf9{"SSI.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf8{#define ALL_BITS ({0}xff<<{2})}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf14{bool}} {\cf2{}}{\cf16{CheckNewCommand}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf14{static uint{8}_t}} {\cf2{LastCmd}} {\cf11{=}} {\cf2{}}{\cf4{{0}xff}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf14{bool}} {\cf2{returnValue}} {\cf11{=}} {\cf2{}}{\cf13{false}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf14{uint{8}_t}} {\cf2{CurrentCmd}} {\cf11{=}}{\cf2{}}{\cf16{getCommand}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf13{if}} {\cf2{}}{\cf11{(}}{\cf2{CurrentCmd}} {\cf11{!=}} {\cf2{LastCmd}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"}}{\cf7{\\r\\n}}{\cf3{command: %u"}}{\cf2{}}{\cf11{,}} {\cf2{CurrentCmd}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{		LastCmd}} {\cf11{=}} {\cf2{CurrentCmd}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{		}\par\pard
\cbpat1{		ES_Event PostEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{		PostEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{=}} {\cf2{NEW_CMD}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{		PostEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{=}} {\cf2{CurrentCmd}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}		}\par\pard
\cbpat1{		{\cf16{PostDCMotorSM}}{\cf2{}}{\cf11{(}}{\cf2{PostEvent}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{		}\par\pard
\cbpat1{		returnValue}} {\cf11{=}} {\cf2{}}{\cf13{true}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{return}} {\cf2{returnValue}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf14{bool}} {\cf2{}}{\cf16{CheckTapeSensor}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf14{static uint{8}_t}} {\cf2{LastState}} {\cf11{=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf14{bool}} {\cf2{returnValue}} {\cf11{=}} {\cf2{}}{\cf13{false}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf14{uint{8}_t}} {\cf2{CurrentState}} {\cf11{=}} {\cf2{}}{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{GPIO_PORTC_BASE}} {\cf11{+ (}}{\cf2{GPIO_O_DATA}}{\cf11{+}}{\cf2{ALL_BITS}}{\cf11{)) &}} {\cf2{BIT{5}HI}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{if}} {\cf2{}}{\cf11{(}}{\cf2{CurrentState}} {\cf11{!=}} {\cf2{LastState}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf13{if}} {\cf2{}}{\cf11{(}}{\cf2{CurrentState}} {\cf11{==}} {\cf2{BIT{5}HI}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{			ES_Event PostEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{			PostEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{=}} {\cf2{TAPE}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}			}\par\pard
\cbpat1{			{\cf16{PostDCMotorSM}}{\cf2{}}{\cf11{(}}{\cf2{PostEvent}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\}}}	}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}{\cf2{}}}\par\pard
\cbpat1{}}
